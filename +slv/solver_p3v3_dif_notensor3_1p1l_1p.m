% Generated using GBSolver generator Copyright Martin Bujnak,
% Zuzana Kukelova, Tomas Pajdla CTU Prague 2008.
% 
% Please refer to the following paper, when using this code :
%     Kukelova Z., Bujnak M., Pajdla T., Automatic Generator of Minimal Problem Solvers,
%     ECCV 2008, Marseille, France, October 12-18, 2008

function [b, c, d, a, e] = solver_p3v3_dif_notensor3_1p1l_1p(A_11, B_11)

	% precalculate polynomial equations coefficients
    c = zeros(71, 1);
	c(1) = A_11(17) - A_11(9) - A_11(1);
	c(2) = A_11(9) - A_11(1) - A_11(17);
	c(3) = A_11(1) - A_11(9) - A_11(17);
	c(4) = A_11(1) + A_11(9) + A_11(17);
	c(5) = 2*A_11(11) + 2*A_11(15);
	c(6) = 2*A_11(5) + 2*A_11(13);
	c(7) = 2*A_11(3) + 2*A_11(7);
	c(8) = 2*A_11(3) - 2*A_11(7);
	c(9) = 2*A_11(13) - 2*A_11(5);
	c(10) = 2*A_11(11) - 2*A_11(15);
	c(11) = A_11(19);
	c(12) = A_11(21);
	c(13) = A_11(18) - A_11(10) - A_11(2);
	c(14) = A_11(10) - A_11(2) - A_11(18);
	c(15) = A_11(2) - A_11(10) - A_11(18);
	c(16) = A_11(2) + A_11(10) + A_11(18);
	c(17) = 2*A_11(12) + 2*A_11(16);
	c(18) = 2*A_11(6) + 2*A_11(14);
	c(19) = 2*A_11(4) + 2*A_11(8);
	c(20) = 2*A_11(4) - 2*A_11(8);
	c(21) = 2*A_11(14) - 2*A_11(6);
	c(22) = 2*A_11(12) - 2*A_11(16);
	c(23) = A_11(20);
	c(24) = A_11(22);
	c(25) = 2*B_11(29) + 2*B_11(33);
	c(26) = 2*B_11(23) + 2*B_11(31);
	c(27) = 2*B_11(21) + 2*B_11(25);
	c(28) = 2*B_11(21) - 2*B_11(25);
	c(29) = 2*B_11(31) - 2*B_11(23);
	c(30) = 2*B_11(29) - 2*B_11(33);
	c(31) = B_11(17) - B_11(9) - B_11(1);
	c(32) = B_11(9) - B_11(1) - B_11(17);
	c(33) = B_11(1) - B_11(9) - B_11(17);
	c(34) = B_11(1) + B_11(9) + B_11(17);
	c(35) = B_11(35) - B_11(27) - B_11(19);
	c(36) = B_11(27) - B_11(19) - B_11(35);
	c(37) = B_11(19) - B_11(27) - B_11(35);
	c(38) = B_11(19) + B_11(27) + B_11(35);
	c(39) = 2*B_11(11) + 2*B_11(15);
	c(40) = 2*B_11(5) + 2*B_11(13);
	c(41) = 2*B_11(3) + 2*B_11(7);
	c(42) = 2*B_11(3) - 2*B_11(7);
	c(43) = 2*B_11(13) - 2*B_11(5);
	c(44) = 2*B_11(11) - 2*B_11(15);
	c(45) = B_11(37);
	c(46) = 2*B_11(30) + 2*B_11(34);
	c(47) = 2*B_11(24) + 2*B_11(32);
	c(48) = 2*B_11(22) + 2*B_11(26);
	c(49) = 2*B_11(22) - 2*B_11(26);
	c(50) = 2*B_11(32) - 2*B_11(24);
	c(51) = 2*B_11(30) - 2*B_11(34);
	c(52) = B_11(18) - B_11(10) - B_11(2);
	c(53) = B_11(10) - B_11(2) - B_11(18);
	c(54) = B_11(2) - B_11(10) - B_11(18);
	c(55) = B_11(2) + B_11(10) + B_11(18);
	c(56) = B_11(36) - B_11(28) - B_11(20);
	c(57) = B_11(28) - B_11(20) - B_11(36);
	c(58) = B_11(20) - B_11(28) - B_11(36);
	c(59) = B_11(20) + B_11(28) + B_11(36);
	c(60) = 2*B_11(12) + 2*B_11(16);
	c(61) = 2*B_11(6) + 2*B_11(14);
	c(62) = 2*B_11(4) + 2*B_11(8);
	c(63) = 2*B_11(4) - 2*B_11(8);
	c(64) = 2*B_11(14) - 2*B_11(6);
	c(65) = 2*B_11(12) - 2*B_11(16);
	c(66) = B_11(38);
	c(67) = 1;
	c(68) = 1;
	c(69) = 1;
	c(70) = 1;
	c(71) = -1;

	M1 = zeros(20, 51);
	ci = [141, 162, 183, 304, 505, 716];
	M1(ci) = c(1);

	ci = [41, 62, 123, 244, 445, 656];
	M1(ci) = c(2);

	ci = [1, 22, 83, 204, 405, 616];
	M1(ci) = c(3);

	ci = [321, 342, 363, 384, 585, 796];
	M1(ci) = c(4);

	ci = [101, 122, 163, 284, 485, 696];
	M1(ci) = c(5);

	ci = [81, 102, 143, 264, 465, 676];
	M1(ci) = c(6);

	ci = [21, 42, 103, 224, 425, 636];
	M1(ci) = c(7);

	ci = [261, 282, 303, 364, 565, 776];
	M1(ci) = c(8);

	ci = [221, 242, 283, 344, 545, 756];
	M1(ci) = c(9);

	ci = [201, 222, 263, 324, 525, 736];
	M1(ci) = c(10);

	ci = [801, 822, 843, 864, 885, 996];
	M1(ci) = c(11);

	ci = [901, 922, 943, 964, 985, 1016];
	M1(ci) = c(12);

	ci = [146, 167, 188, 309, 510, 717];
	M1(ci) = c(13);

	ci = [46, 67, 128, 249, 450, 657];
	M1(ci) = c(14);

	ci = [6, 27, 88, 209, 410, 617];
	M1(ci) = c(15);

	ci = [326, 347, 368, 389, 590, 797];
	M1(ci) = c(16);

	ci = [106, 127, 168, 289, 490, 697];
	M1(ci) = c(17);

	ci = [86, 107, 148, 269, 470, 677];
	M1(ci) = c(18);

	ci = [26, 47, 108, 229, 430, 637];
	M1(ci) = c(19);

	ci = [266, 287, 308, 369, 570, 777];
	M1(ci) = c(20);

	ci = [226, 247, 288, 349, 550, 757];
	M1(ci) = c(21);

	ci = [206, 227, 268, 329, 530, 737];
	M1(ci) = c(22);

	ci = [806, 827, 848, 869, 890, 997];
	M1(ci) = c(23);

	ci = [906, 927, 948, 969, 990, 1017];
	M1(ci) = c(24);

	M1(498) = c(25);
	M1(478) = c(26);
	M1(438) = c(27);
	M1(578) = c(28);
	M1(558) = c(29);
	M1(538) = c(30);
	M1(718) = c(31);
	M1(658) = c(32);
	M1(618) = c(33);
	M1(798) = c(34);
	M1(518) = c(35);
	M1(458) = c(36);
	M1(418) = c(37);
	M1(598) = c(38);
	M1(698) = c(39);
	M1(678) = c(40);
	M1(638) = c(41);
	M1(778) = c(42);
	M1(758) = c(43);
	M1(738) = c(44);
	M1(1018) = c(45);
	M1(499) = c(46);
	M1(479) = c(47);
	M1(439) = c(48);
	M1(579) = c(49);
	M1(559) = c(50);
	M1(539) = c(51);
	M1(719) = c(52);
	M1(659) = c(53);
	M1(619) = c(54);
	M1(799) = c(55);
	M1(519) = c(56);
	M1(459) = c(57);
	M1(419) = c(58);
	M1(599) = c(59);
	M1(699) = c(60);
	M1(679) = c(61);
	M1(639) = c(62);
	M1(779) = c(63);
	M1(759) = c(64);
	M1(739) = c(65);
	M1(1019) = c(66);
	ci = [151, 172, 193, 314, 515, 720];
	M1(ci) = c(67);

	ci = [51, 72, 133, 254, 455, 660];
	M1(ci) = c(68);

	ci = [11, 32, 93, 214, 415, 620];
	M1(ci) = c(69);

	ci = [331, 352, 373, 394, 595, 800];
	M1(ci) = c(70);

	ci = [911, 932, 953, 974, 995, 1020];
	M1(ci) = c(71);


	M1 = qrdec(M1);

	M2 = zeros(72, 121);
	M2(53:72, [66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121]) = M1(1:20, :);
	M2([2809 2882 3027 3460 4181]) = M1(476);
	M2([2886 2959 3104 3537 4258]) = M1(497);
	M2([3025 3098 3171 3604 4325]) = M1(516);
	M2([3030 3103 3176 3609 4330]) = M1(517);
	M2([3241 3314 3459 3676 4397]) = M1(536);
	M2([3246 3319 3464 3681 4402]) = M1(537);
	M2([3313 3386 3531 3748 4469]) = M1(556);
	M2([3318 3391 3536 3753 4474]) = M1(557);
	M2([3457 3530 3603 3820 4541]) = M1(576);
	M2([3462 3535 3608 3825 4546]) = M1(577);
	M2([3673 3746 3819 3892 4613]) = M1(596);
	M2([3678 3751 3824 3897 4618]) = M1(597);
	M2([11 372 445 662 1095 1168 1385 1818 2539 2612 2829 3262 3983]) = M1(618);
	M2([96 169 458 531 748 1181 1254 1471 1904 2625 2698 2915 3348 4069]) = M1(639);
	M2([182 255 328 545 618 835 1268 1341 1558 1991 2712 2785 3002 3435 4156]) = M1(660);
	M2([4969 5042 5187 5620 6341]) = M1(676);
	M2([4974 5047 5192 5625 6346]) = M1(677);
	M2([371 660 733 878 1383 1456 1601 2034 2827 2900 3045 3478 4199]) = M1(678);
	M2([384 457 674 747 892 1397 1470 1615 2048 2841 2914 3059 3492 4213]) = M1(679);
	M2([398 471 544 689 762 907 1412 1485 1630 2063 2856 2929 3074 3507 4228]) = M1(680);
	M2([5041 5114 5259 5692 6413]) = M1(696);
	M2([5046 5119 5264 5697 6418]) = M1(697);
	M2([443 732 805 950 1455 1528 1673 2106 2899 2972 3117 3550 4271]) = M1(698);
	M2([456 529 746 819 964 1469 1542 1687 2120 2913 2986 3131 3564 4285]) = M1(699);
	M2([470 543 616 761 834 979 1484 1557 1702 2135 2928 3001 3146 3579 4300]) = M1(700);
	M2([5185 5258 5331 5764 6485]) = M1(716);
	M2([5190 5263 5336 5769 6490]) = M1(717);
	M2([659 876 949 1022 1599 1672 1745 2178 3043 3116 3189 3622 4343]) = M1(718);
	M2([672 745 890 963 1036 1613 1686 1759 2192 3057 3130 3203 3636 4357]) = M1(719);
	M2([686 759 832 905 978 1051 1628 1701 1774 2207 3072 3145 3218 3651 4372]) = M1(720);
	M2([5401 5474 5619 5836 6557]) = M1(736);
	M2([5406 5479 5624 5841 6562]) = M1(737);
	M2([1091 1380 1453 1598 1815 1888 2033 2250 3259 3332 3477 3694 4415]) = M1(738);
	M2([1104 1177 1394 1467 1612 1829 1902 2047 2264 3273 3346 3491 3708 4429]) = M1(739);
	M2([1118 1191 1264 1409 1482 1627 1844 1917 2062 2279 3288 3361 3506 3723 4444]) = M1(740);
	M2([5473 5546 5691 5908 6629]) = M1(756);
	M2([5478 5551 5696 5913 6634]) = M1(757);
	M2([1163 1452 1525 1670 1887 1960 2105 2322 3331 3404 3549 3766 4487]) = M1(758);
	M2([1176 1249 1466 1539 1684 1901 1974 2119 2336 3345 3418 3563 3780 4501]) = M1(759);
	M2([1190 1263 1336 1481 1554 1699 1916 1989 2134 2351 3360 3433 3578 3795 4516]) = M1(760);
	M2([5617 5690 5763 5980 6701]) = M1(776);
	M2([5622 5695 5768 5985 6706]) = M1(777);
	M2([1379 1596 1669 1742 2031 2104 2177 2394 3475 3548 3621 3838 4559]) = M1(778);
	M2([1392 1465 1610 1683 1756 2045 2118 2191 2408 3489 3562 3635 3852 4573]) = M1(779);
	M2([1406 1479 1552 1625 1698 1771 2060 2133 2206 2423 3504 3577 3650 3867 4588]) = M1(780);
	M2([5833 5906 5979 6052 6773]) = M1(796);
	M2([5838 5911 5984 6057 6778]) = M1(797);
	M2([1811 2028 2101 2174 2247 2320 2393 2466 3691 3764 3837 3910 4631]) = M1(798);
	M2([1824 1897 2042 2115 2188 2261 2334 2407 2480 3705 3778 3851 3924 4645]) = M1(799);
	M2([1838 1911 1984 2057 2130 2203 2276 2349 2422 2495 3720 3793 3866 3939 4660]) = M1(800);
	M2([6841 6914 6987 7060 7133]) = M1(896);
	M2([6846 6919 6992 7065 7138]) = M1(897);
	M2([7921 7994 8067 8140 8213]) = M1(996);
	M2([7926 7999 8072 8145 8218]) = M1(997);
	M2([6131 6348 6421 6494 6567 6640 6713 6786 6859 6932 7005 7078 7151]) = M1(998);
	M2([6144 6217 6362 6435 6508 6581 6654 6727 6800 6873 6946 7019 7092 7165]) = M1(999);
	M2([6158 6231 6304 6377 6450 6523 6596 6669 6742 6815 6888 6961 7034 7107 7180]) = M1(1000);
	M2([8281 8354 8427 8500 8573]) = M1(1016);
	M2([8286 8359 8432 8505 8578]) = M1(1017);
	M2([7211 7428 7501 7574 7647 7720 7793 7866 7939 8012 8085 8158 8231]) = M1(1018);
	M2([7224 7297 7442 7515 7588 7661 7734 7807 7880 7953 8026 8099 8172 8245]) = M1(1019);
	M2([7238 7311 7384 7457 7530 7603 7676 7749 7822 7895 7968 8041 8114 8187 8260]) = M1(1020);
	M2 = qrdec(M2);

	M3 = zeros(78, 121);
	M3(7:78, [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121]) = M2(1:72, :);
	M3([4681]) = M2(6548);
	M3([3512 3591 3748 3983 4764]) = M2(6621);
	M3([4837]) = M2(6692);
	M3([3590 3669 3826 4061 4842]) = M2(6693);
	M3([4915]) = M2(6764);
	M3([3746 3825 3904 4139 4920]) = M2(6765);
	M3([4993]) = M2(6836);
	M3([3980 4059 4138 4217 4998]) = M2(6837);
	M3([6865]) = M2(7484);
	M3([5384 5463 5620 6089 6870]) = M2(7485);
	M3([6943]) = M2(7556);
	M3([5462 5541 5698 6167 6948]) = M2(7557);
	M3([7021]) = M2(7628);
	M3([5618 5697 5776 6245 7026]) = M2(7629);
	M3([7099]) = M2(7700);
	M3([5852 5931 6088 6323 7104]) = M2(7701);
	M3([7177]) = M2(7772);
	M3([5930 6009 6166 6401 7182]) = M2(7773);
	M3([7255]) = M2(7844);
	M3([6086 6165 6244 6479 7260]) = M2(7845);
	M3([7333]) = M2(7916);
	M3([6320 6399 6478 6557 7338]) = M2(7917);
	M3([7723]) = M2(8276);
	M3([7412 7491 7570 7649 7728]) = M2(8277);
	M3([8893]) = M2(8636);
	M3([8582 8661 8740 8819 8898]) = M2(8637);
	M3([9283]) = M2(8708);
	M3([8972 9051 9130 9209 9288]) = M2(8709);
	M3 = qrdec(M3);

	M4 = zeros(92, 121);
	M4(15:92, [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121]) = M3(1:78, :);
	M4([3957]) = M3(5755);
	M4([1106 1199 1292 2213 4054]) = M3(5834);
	M4([2123 2676 4517]) = M3(6229);
	M4([2034 2127 2220 2773 4614]) = M3(6308);
	M4([4693]) = M3(6379);
	M4([2302 2395 2580 2857 4698]) = M3(6380);
	M4([2583 2860 4701]) = M3(6385);
	M4([2310 2403 2588 2865 4706]) = M3(6386);
	M4([4785]) = M3(6457);
	M4([2394 2487 2672 2949 4790]) = M3(6458);
	M4([2675 2952 4793]) = M3(6463);
	M4([2402 2495 2680 2957 4798]) = M3(6464);
	M4([4877]) = M3(6535);
	M4([2578 2671 2764 3041 4882]) = M3(6536);
	M4([2767 3044 4885]) = M3(6541);
	M4([2586 2679 2772 3049 4890]) = M3(6542);
	M4([4969]) = M3(6613);
	M4([2854 2947 3040 3133 4974]) = M3(6614);
	M4([3043 3136 4977]) = M3(6619);
	M4([2862 2955 3048 3141 4982]) = M3(6620);
	M4([8741]) = M3(8641);
	M4([7822 7915 8100 8377 8746]) = M3(8642);
	M4([8103 8380 8749]) = M3(8647);
	M4([7830 7923 8108 8385 8754]) = M3(8648);
	M4([8833]) = M3(8719);
	M4([7914 8007 8192 8469 8838]) = M3(8720);
	M4([8195 8472 8841]) = M3(8725);
	M4([7922 8015 8200 8477 8846]) = M3(8726);
	M4([8925]) = M3(8797);
	M4([8098 8191 8284 8561 8930]) = M3(8798);
	M4([8287 8564 8933]) = M3(8803);
	M4([8106 8199 8292 8569 8938]) = M3(8804);
	M4([9017]) = M3(8875);
	M4([8374 8467 8560 8653 9022]) = M3(8876);
	M4([8563 8656 9025]) = M3(8881);
	M4([8382 8475 8568 8661 9030]) = M3(8882);
	M4([10121]) = M3(9031);
	M4([9202 9295 9480 9757 10126]) = M3(9032);
	M4([9483 9760 10129]) = M3(9037);
	M4([9210 9303 9488 9765 10134]) = M3(9038);
	M4([10213]) = M3(9109);
	M4([9294 9387 9572 9849 10218]) = M3(9110);
	M4([9575 9852 10221]) = M3(9115);
	M4([9302 9395 9580 9857 10226]) = M3(9116);
	M4([10305]) = M3(9187);
	M4([9478 9571 9664 9941 10310]) = M3(9188);
	M4([9667 9944 10313]) = M3(9193);
	M4([9486 9579 9672 9949 10318]) = M3(9194);
	M4([10397]) = M3(9265);
	M4([9754 9847 9940 10033 10402]) = M3(9266);
	M4([9943 10036 10405]) = M3(9271);
	M4([9762 9855 9948 10041 10410]) = M3(9272);
	M4 = qrdec(M4);

	M = zeros(50, 66);
	M(10:50, [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66]) = M4([13 14 15 20 21 22 23 24 25 26 27 28 29 30 31 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 74 80 81 82 83 84 85 86 87 88], [13 14 15 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 81 82 83 84 85 91 92 93 94 95 96 97 98 99 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121]);
	M([1 152 203 304 605 956 1007 1108 1409]) = M4(9568);
	M([51 202 253 354 655 1006 1057 1158 1459]) = M4(9660);
	M([101 302 353 404 705 1106 1157 1208 1509]) = M4(9752);
	M([301 452 503 604 755 1256 1307 1408 1559]) = M4(9844);
	M([351 502 553 654 805 1306 1357 1458 1609]) = M4(9936);
	M([401 602 653 704 855 1406 1457 1508 1659]) = M4(10028);
	M([701 752 803 854 905 1556 1607 1658 1709]) = M4(10120);
	M([2001 2052 2103 2154 2205 2256 2307 2358 2409]) = M4(11040);
	M([2501 2552 2603 2654 2705 2756 2807 2858 2909]) = M4(11132);
	M = qrdec(M);

	A = zeros(16);
	amcols = [66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51];
	A(1, 3) = 1;
	A(2, 8) = 1;
	A(3, 12) = 1;
	A(4, 13) = 1;
	A(5, 14) = 1;
	A(6, 15) = 1;
	A(7, :) = -M(49, amcols);
	A(8, :) = -M(45, amcols);
	A(9, :) = -M(44, amcols);
	A(10, :) = -M(43, amcols);
	A(11, :) = -M(42, amcols);
	A(12, :) = -M(40, amcols);
	A(13, :) = -M(39, amcols);
	A(14, :) = -M(38, amcols);
	A(15, :) = -M(37, amcols);
	A(16, :) = -M(36, amcols);

	[V D] = eig(A);
	sol =  V([6, 5, 4, 3, 2],:)./(ones(5, 1)*V(1,:));

	if (find(isnan(sol(:))) > 0)
		
		b = zeros(1, 0);
		c = zeros(1, 0);
		d = zeros(1, 0);
		a = zeros(1, 0);
		e = zeros(1, 0);
	else
		
		I = find(not(imag( sol(1,:) )));
		b = sol(1,I);
		c = sol(2,I);
		d = sol(3,I);
		a = sol(4,I);
		e = sol(5,I);
	end
end
