% Generated using GBSolver generator Copyright Martin Bujnak,
% Zuzana Kukelova, Tomas Pajdla CTU Prague 2008.
% 
% Please refer to the following paper, when using this code :
%     Kukelova Z., Bujnak M., Pajdla T., Automatic Generator of Minimal Problem Solvers,
%     ECCV 2008, Marseille, France, October 12-18, 2008

function [c, d, a, b] = solver_p3v3_dif_tensor_1p2l(A_11)

	% precalculate polynomial equations coefficients
	c(1) = A_11(73) - A_11(37) - A_11(1);
	c(2) = A_11(37) - A_11(1) - A_11(73);
	c(3) = A_11(1) - A_11(37) - A_11(73);
	c(4) = A_11(1) + A_11(37) + A_11(73);
	c(5) = 2*A_11(46) + 2*A_11(64);
	c(6) = 2*A_11(19) + 2*A_11(55);
	c(7) = 2*A_11(10) + 2*A_11(28);
	c(8) = 2*A_11(10) - 2*A_11(28);
	c(9) = 2*A_11(55) - 2*A_11(19);
	c(10) = 2*A_11(46) - 2*A_11(64);
	c(11) = A_11(82);
	c(12) = A_11(74) - A_11(38) - A_11(2);
	c(13) = A_11(38) - A_11(2) - A_11(74);
	c(14) = A_11(2) - A_11(38) - A_11(74);
	c(15) = A_11(2) + A_11(38) + A_11(74);
	c(16) = 2*A_11(47) + 2*A_11(65);
	c(17) = 2*A_11(20) + 2*A_11(56);
	c(18) = 2*A_11(11) + 2*A_11(29);
	c(19) = 2*A_11(11) - 2*A_11(29);
	c(20) = 2*A_11(56) - 2*A_11(20);
	c(21) = 2*A_11(47) - 2*A_11(65);
	c(22) = A_11(83);
	c(23) = A_11(75) - A_11(39) - A_11(3);
	c(24) = A_11(39) - A_11(3) - A_11(75);
	c(25) = A_11(3) - A_11(39) - A_11(75);
	c(26) = A_11(3) + A_11(39) + A_11(75);
	c(27) = 2*A_11(48) + 2*A_11(66);
	c(28) = 2*A_11(21) + 2*A_11(57);
	c(29) = 2*A_11(12) + 2*A_11(30);
	c(30) = 2*A_11(12) - 2*A_11(30);
	c(31) = 2*A_11(57) - 2*A_11(21);
	c(32) = 2*A_11(48) - 2*A_11(66);
	c(33) = A_11(84);
	c(34) = A_11(76) - A_11(40) - A_11(4);
	c(35) = A_11(40) - A_11(4) - A_11(76);
	c(36) = A_11(4) - A_11(40) - A_11(76);
	c(37) = A_11(4) + A_11(40) + A_11(76);
	c(38) = 2*A_11(49) + 2*A_11(67);
	c(39) = 2*A_11(22) + 2*A_11(58);
	c(40) = 2*A_11(13) + 2*A_11(31);
	c(41) = 2*A_11(13) - 2*A_11(31);
	c(42) = 2*A_11(58) - 2*A_11(22);
	c(43) = 2*A_11(49) - 2*A_11(67);
	c(44) = A_11(85);
	c(45) = A_11(77) - A_11(41) - A_11(5);
	c(46) = A_11(41) - A_11(5) - A_11(77);
	c(47) = A_11(5) - A_11(41) - A_11(77);
	c(48) = A_11(5) + A_11(41) + A_11(77);
	c(49) = 2*A_11(50) + 2*A_11(68);
	c(50) = 2*A_11(23) + 2*A_11(59);
	c(51) = 2*A_11(14) + 2*A_11(32);
	c(52) = 2*A_11(14) - 2*A_11(32);
	c(53) = 2*A_11(59) - 2*A_11(23);
	c(54) = 2*A_11(50) - 2*A_11(68);
	c(55) = A_11(86);
	c(56) = A_11(78) - A_11(42) - A_11(6);
	c(57) = A_11(42) - A_11(6) - A_11(78);
	c(58) = A_11(6) - A_11(42) - A_11(78);
	c(59) = A_11(6) + A_11(42) + A_11(78);
	c(60) = 2*A_11(51) + 2*A_11(69);
	c(61) = 2*A_11(24) + 2*A_11(60);
	c(62) = 2*A_11(15) + 2*A_11(33);
	c(63) = 2*A_11(15) - 2*A_11(33);
	c(64) = 2*A_11(60) - 2*A_11(24);
	c(65) = 2*A_11(51) - 2*A_11(69);
	c(66) = A_11(87);
	c(67) = A_11(79) - A_11(43) - A_11(7);
	c(68) = A_11(43) - A_11(7) - A_11(79);
	c(69) = A_11(7) - A_11(43) - A_11(79);
	c(70) = A_11(7) + A_11(43) + A_11(79);
	c(71) = 2*A_11(52) + 2*A_11(70);
	c(72) = 2*A_11(25) + 2*A_11(61);
	c(73) = 2*A_11(16) + 2*A_11(34);
	c(74) = 2*A_11(16) - 2*A_11(34);
	c(75) = 2*A_11(61) - 2*A_11(25);
	c(76) = 2*A_11(52) - 2*A_11(70);
	c(77) = A_11(88);
	c(78) = A_11(80) - A_11(44) - A_11(8);
	c(79) = A_11(44) - A_11(8) - A_11(80);
	c(80) = A_11(8) - A_11(44) - A_11(80);
	c(81) = A_11(8) + A_11(44) + A_11(80);
	c(82) = 2*A_11(53) + 2*A_11(71);
	c(83) = 2*A_11(26) + 2*A_11(62);
	c(84) = 2*A_11(17) + 2*A_11(35);
	c(85) = 2*A_11(17) - 2*A_11(35);
	c(86) = 2*A_11(62) - 2*A_11(26);
	c(87) = 2*A_11(53) - 2*A_11(71);
	c(88) = A_11(89);
	c(89) = A_11(81) - A_11(45) - A_11(9);
	c(90) = A_11(45) - A_11(9) - A_11(81);
	c(91) = A_11(9) - A_11(45) - A_11(81);
	c(92) = A_11(9) + A_11(45) + A_11(81);
	c(93) = 2*A_11(54) + 2*A_11(72);
	c(94) = 2*A_11(27) + 2*A_11(63);
	c(95) = 2*A_11(18) + 2*A_11(36);
	c(96) = 2*A_11(18) - 2*A_11(36);
	c(97) = 2*A_11(63) - 2*A_11(27);
	c(98) = 2*A_11(54) - 2*A_11(72);
	c(99) = A_11(90);
	c(100) = 1;
	c(101) = 1;
	c(102) = 1;
	c(103) = 1;
	c(104) = -1;

	M1 = zeros(4, 11);
	ci = [];
	M1(ci) = c(1);

	ci = [];
	M1(ci) = c(2);

	ci = [];
	M1(ci) = c(3);

	ci = [];
	M1(ci) = c(4);

	ci = [];
	M1(ci) = c(5);

	ci = [];
	M1(ci) = c(6);

	ci = [];
	M1(ci) = c(7);

	ci = [];
	M1(ci) = c(8);

	ci = [];
	M1(ci) = c(9);

	ci = [];
	M1(ci) = c(10);

	ci = [];
	M1(ci) = c(11);

	ci = [];
	M1(ci) = c(12);

	ci = [];
	M1(ci) = c(13);

	ci = [];
	M1(ci) = c(14);

	ci = [];
	M1(ci) = c(15);

	ci = [];
	M1(ci) = c(16);

	ci = [];
	M1(ci) = c(17);

	ci = [];
	M1(ci) = c(18);

	ci = [];
	M1(ci) = c(19);

	ci = [];
	M1(ci) = c(20);

	ci = [];
	M1(ci) = c(21);

	ci = [];
	M1(ci) = c(22);

	ci = [];
	M1(ci) = c(23);

	ci = [];
	M1(ci) = c(24);

	ci = [];
	M1(ci) = c(25);

	ci = [];
	M1(ci) = c(26);

	ci = [];
	M1(ci) = c(27);

	ci = [];
	M1(ci) = c(28);

	ci = [];
	M1(ci) = c(29);

	ci = [];
	M1(ci) = c(30);

	ci = [];
	M1(ci) = c(31);

	ci = [];
	M1(ci) = c(32);

	ci = [];
	M1(ci) = c(33);

	ci = [];
	M1(ci) = c(34);

	ci = [];
	M1(ci) = c(35);

	ci = [];
	M1(ci) = c(36);

	ci = [];
	M1(ci) = c(37);

	ci = [];
	M1(ci) = c(38);

	ci = [];
	M1(ci) = c(39);

	ci = [];
	M1(ci) = c(40);

	ci = [];
	M1(ci) = c(41);

	ci = [];
	M1(ci) = c(42);

	ci = [];
	M1(ci) = c(43);

	ci = [];
	M1(ci) = c(44);

	ci = [];
	M1(ci) = c(45);

	ci = [];
	M1(ci) = c(46);

	ci = [];
	M1(ci) = c(47);

	ci = [];
	M1(ci) = c(48);

	ci = [];
	M1(ci) = c(49);

	ci = [];
	M1(ci) = c(50);

	ci = [];
	M1(ci) = c(51);

	ci = [];
	M1(ci) = c(52);

	ci = [];
	M1(ci) = c(53);

	ci = [];
	M1(ci) = c(54);

	ci = [];
	M1(ci) = c(55);

	M1(9) = c(56);
	M1(1) = c(57);
	M1(37) = c(58);
	M1(21) = c(59);
	M1(5) = c(60);
	M1(29) = c(61);
	M1(25) = c(62);
	M1(17) = c(63);
	M1(13) = c(64);
	M1(33) = c(65);
	M1(41) = c(66);
	ci = [];
	M1(ci) = c(67);

	ci = [];
	M1(ci) = c(68);

	ci = [];
	M1(ci) = c(69);

	ci = [];
	M1(ci) = c(70);

	ci = [];
	M1(ci) = c(71);

	ci = [];
	M1(ci) = c(72);

	ci = [];
	M1(ci) = c(73);

	ci = [];
	M1(ci) = c(74);

	ci = [];
	M1(ci) = c(75);

	ci = [];
	M1(ci) = c(76);

	ci = [];
	M1(ci) = c(77);

	M1(10) = c(78);
	M1(2) = c(79);
	M1(38) = c(80);
	M1(22) = c(81);
	M1(6) = c(82);
	M1(30) = c(83);
	M1(26) = c(84);
	M1(18) = c(85);
	M1(14) = c(86);
	M1(34) = c(87);
	M1(42) = c(88);
	M1(11) = c(89);
	M1(3) = c(90);
	M1(39) = c(91);
	M1(23) = c(92);
	M1(7) = c(93);
	M1(31) = c(94);
	M1(27) = c(95);
	M1(19) = c(96);
	M1(15) = c(97);
	M1(35) = c(98);
	M1(43) = c(99);
	M1(12) = c(100);
	M1(4) = c(101);
	M1(40) = c(102);
	M1(24) = c(103);
	M1(44) = c(104);

	M1 = qrdec(M1);

	M2 = zeros(20, 35);
	M2(17:20, [21 22 23 24 25 26 27 28 29 30 35]) = M1(1:4, :);
	M2([1 22 83 204]) = M1(1);
	M2([25 46 107 228]) = M1(6);
	M2([49 70 131 252]) = M1(11);
	M2([93 114 155 276]) = M1(16);
	M2([101 122 163 284]) = M1(17);
	M2([105 126 167 288]) = M1(18);
	M2([109 130 171 292]) = M1(19);
	M2([113 134 175 296]) = M1(20);
	M2([141 162 183 304]) = M1(21);
	M2([145 166 187 308]) = M1(22);
	M2([149 170 191 312]) = M1(23);
	M2([153 174 195 316]) = M1(24);
	M2([201 222 263 324]) = M1(25);
	M2([205 226 267 328]) = M1(26);
	M2([209 230 271 332]) = M1(27);
	M2([213 234 275 336]) = M1(28);
	M2([221 242 283 344]) = M1(29);
	M2([225 246 287 348]) = M1(30);
	M2([229 250 291 352]) = M1(31);
	M2([233 254 295 356]) = M1(32);
	M2([261 282 303 364]) = M1(33);
	M2([265 286 307 368]) = M1(34);
	M2([269 290 311 372]) = M1(35);
	M2([273 294 315 376]) = M1(36);
	M2([321 342 363 384]) = M1(37);
	M2([325 346 367 388]) = M1(38);
	M2([329 350 371 392]) = M1(39);
	M2([333 354 375 396]) = M1(40);
	M2([601 622 643 664]) = M1(41);
	M2([605 626 647 668]) = M1(42);
	M2([609 630 651 672]) = M1(43);
	M2([613 634 655 676]) = M1(44);
	M2 = qrdec(M2);

	M3 = zeros(54, 70);
	M3(35:54, [36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70]) = M2(1:20, :);
	M3([1 326 489 814 869 1032 1357]) = M2(417);
	M3([62 117 388 551 876 931 1094 1419]) = M2(438);
	M3([124 179 234 451 614 939 994 1157 1482]) = M2(459);
	M3([295 350 405 514 569 678 1057 1112 1221 1546]) = M2(480);
	M3([325 596 705 1084 1139 1248 1573]) = M2(497);
	M3([332 387 604 713 1092 1147 1256 1581]) = M2(498);
	M3([340 395 450 613 722 1101 1156 1265 1590]) = M2(499);
	M3([349 404 459 568 623 732 1111 1166 1275 1600]) = M2(500);
	M3([487 704 759 1192 1247 1302 1627]) = M2(517);
	M3([494 549 712 767 1200 1255 1310 1635]) = M2(518);
	M3([502 557 612 721 776 1209 1264 1319 1644]) = M2(519);
	M3([511 566 621 676 731 786 1219 1274 1329 1654]) = M2(520);
	M3([811 1082 1191 1354 1409 1518 1681]) = M2(537);
	M3([818 873 1090 1199 1362 1417 1526 1689]) = M2(538);
	M3([826 881 936 1099 1208 1371 1426 1535 1698]) = M2(539);
	M3([835 890 945 1054 1109 1218 1381 1436 1545 1708]) = M2(540);
	M3([865 1136 1245 1408 1463 1572 1735]) = M2(557);
	M3([872 927 1144 1253 1416 1471 1580 1743]) = M2(558);
	M3([880 935 990 1153 1262 1425 1480 1589 1752]) = M2(559);
	M3([889 944 999 1108 1163 1272 1435 1490 1599 1762]) = M2(560);
	M3([1027 1244 1299 1516 1571 1626 1789]) = M2(577);
	M3([1034 1089 1252 1307 1524 1579 1634 1797]) = M2(578);
	M3([1042 1097 1152 1261 1316 1533 1588 1643 1806]) = M2(579);
	M3([1051 1106 1161 1216 1271 1326 1543 1598 1653 1816]) = M2(580);
	M3([1351 1568 1623 1678 1733 1788 1843]) = M2(597);
	M3([1358 1413 1576 1631 1686 1741 1796 1851]) = M2(598);
	M3([1366 1421 1476 1585 1640 1695 1750 1805 1860]) = M2(599);
	M3([1375 1430 1485 1540 1595 1650 1705 1760 1815 1870]) = M2(600);
	M3([2971 3188 3243 3298 3353 3408 3463]) = M2(697);
	M3([2978 3033 3196 3251 3306 3361 3416 3471]) = M2(698);
	M3([2986 3041 3096 3205 3260 3315 3370 3425 3480]) = M2(699);
	M3([2995 3050 3105 3160 3215 3270 3325 3380 3435 3490]) = M2(700);
	M3 = qrdec(M3);

	M = zeros(72, 88);
	M(51:72, [51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88]) = M3([27 28 30 33 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 52 53], [27 28 30 33 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 57 58 60 61 62 63 64 65 66 67 68 69 70]);
	M([1081 1514 1731 2164 2237 2454 2887]) = M3(3021);
	M([8 513 730 1163 1236 1597 1814 2247 2320 2537 2970]) = M3(3076);
	M([19 308 597 814 1247 1320 1393 1682 1899 2332 2405 2622 3055]) = M3(3131);
	M([104 177 250 395 468 541 686 759 904 1481 1554 1627 1772 1845 1990 2495 2568 2713 3146]) = M3(3186);
	M([1513 1874 2019 2524 2597 2742 3175]) = M3(3237);
	M([152 801 946 1523 1596 1885 2030 2535 2608 2753 3186]) = M3(3238);
	M([91 596 813 958 1535 1608 1681 1898 2043 2548 2621 2766 3199]) = M3(3239);
	M([176 249 322 467 540 613 758 831 976 1553 1626 1699 1844 1917 2062 2567 2640 2785 3218]) = M3(3240);
	M([1729 2018 2091 2668 2741 2814 3247]) = M3(3291);
	M([440 945 1018 1739 1812 2029 2102 2679 2752 2825 3258]) = M3(3292);
	M([379 812 957 1030 1751 1824 1897 2042 2115 2692 2765 2838 3271]) = M3(3293);
	M([464 537 610 683 756 829 902 975 1048 1769 1842 1915 1988 2061 2134 2711 2784 2857 3290]) = M3(3294);
	M([2161 2522 2667 2884 2957 3102 3319]) = M3(3345);
	M([1160 1809 1954 2171 2244 2533 2678 2895 2968 3113 3330]) = M3(3346);
	M([1099 1604 1821 1966 2183 2256 2329 2546 2691 2908 2981 3126 3343]) = M3(3347);
	M([1184 1257 1330 1475 1548 1621 1766 1839 1984 2201 2274 2347 2492 2565 2710 2927 3000 3145 3362]) = M3(3348);
	M([2233 2594 2739 2956 3029 3174 3391]) = M3(3399);
	M([1232 1881 2026 2243 2316 2605 2750 2967 3040 3185 3402]) = M3(3400);
	M([1171 1676 1893 2038 2255 2328 2401 2618 2763 2980 3053 3198 3415]) = M3(3401);
	M([1256 1329 1402 1547 1620 1693 1838 1911 2056 2273 2346 2419 2564 2637 2782 2999 3072 3217 3434]) = M3(3402);
	M([2449 2738 2811 3100 3173 3246 3463]) = M3(3453);
	M([1520 2025 2098 2459 2532 2749 2822 3111 3184 3257 3474]) = M3(3454);
	M([1459 1892 2037 2110 2471 2544 2617 2762 2835 3124 3197 3270 3487]) = M3(3455);
	M([1544 1617 1690 1763 1836 1909 1982 2055 2128 2489 2562 2635 2708 2781 2854 3143 3216 3289 3506]) = M3(3456);
	M([2881 3170 3243 3316 3389 3462 3535]) = M3(3507);
	M([2240 2745 2818 2891 2964 3181 3254 3327 3400 3473 3546]) = M3(3508);
	M([2179 2612 2757 2830 2903 2976 3049 3194 3267 3340 3413 3486 3559]) = M3(3509);
	M([2264 2337 2410 2483 2556 2629 2702 2775 2848 2921 2994 3067 3140 3213 3286 3359 3432 3505 3578]) = M3(3510);
	M([4681 4970 5043 5116 5189 5262 5335]) = M3(3777);
	M([4040 4545 4618 4691 4764 4981 5054 5127 5200 5273 5346]) = M3(3778);
	M([3979 4412 4557 4630 4703 4776 4849 4994 5067 5140 5213 5286 5359]) = M3(3779);
	M([4064 4137 4210 4283 4356 4429 4502 4575 4648 4721 4794 4867 4940 5013 5086 5159 5232 5305 5378]) = M3(3780);
	M = qrdec(M);

	A = zeros(16);
	amcols = [88 87 86 85 84 83 82 81 80 79 78 75 74 73 72 55];
	A(1, 4) = 1;
	A(2, 8) = 1;
	A(3, 11) = 1;
	A(4, :) = -M(72, amcols);
	A(5, :) = -M(71, amcols);
	A(6, 14) = 1;
	A(7, :) = -M(69, amcols);
	A(8, :) = -M(67, amcols);
	A(9, :) = -M(66, amcols);
	A(10, :) = -M(63, amcols);
	A(11, :) = -M(61, amcols);
	A(12, :) = -M(54, amcols);
	A(13, :) = -M(53, amcols);
	A(14, :) = -M(52, amcols);
	A(15, :) = -M(51, amcols);
	A(16, :) = -M(48, amcols);

	[V D] = eig(A);
	sol =  V([5, 4, 3, 2],:)./(ones(4, 1)*V(1,:));

	if (find(isnan(sol(:))) > 0)
		
		c = zeros(1, 0);
		d = zeros(1, 0);
		a = zeros(1, 0);
		b = zeros(1, 0);
	else
		
		I = find(not(imag( sol(1,:) )));
		c = sol(1,I);
		d = sol(2,I);
		a = sol(3,I);
		b = sol(4,I);
	end
end
