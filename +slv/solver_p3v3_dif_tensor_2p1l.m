% Generated using GBSolver generator Copyright Martin Bujnak,
% Zuzana Kukelova, Tomas Pajdla CTU Prague 2008.
% 
% Please refer to the following paper, when using this code :
%     Kukelova Z., Bujnak M., Pajdla T., Automatic Generator of Minimal Problem Solvers,
%     ECCV 2008, Marseille, France, October 12-18, 2008

function [a, b, c, d] = solver_p3v3_dif_tensor_2p1l(A_11)

	% precalculate polynomial equations coefficients
	c(1) = A_11(65) - A_11(33) - A_11(1);
	c(2) = A_11(33) - A_11(1) - A_11(65);
	c(3) = A_11(1) - A_11(33) - A_11(65);
	c(4) = A_11(1) + A_11(33) + A_11(65);
	c(5) = 2*A_11(41) + 2*A_11(57);
	c(6) = 2*A_11(17) + 2*A_11(49);
	c(7) = 2*A_11(9) + 2*A_11(25);
	c(8) = 2*A_11(9) - 2*A_11(25);
	c(9) = 2*A_11(49) - 2*A_11(17);
	c(10) = 2*A_11(41) - 2*A_11(57);
	c(11) = A_11(66) - A_11(34) - A_11(2);
	c(12) = A_11(34) - A_11(2) - A_11(66);
	c(13) = A_11(2) - A_11(34) - A_11(66);
	c(14) = A_11(2) + A_11(34) + A_11(66);
	c(15) = 2*A_11(42) + 2*A_11(58);
	c(16) = 2*A_11(18) + 2*A_11(50);
	c(17) = 2*A_11(10) + 2*A_11(26);
	c(18) = 2*A_11(10) - 2*A_11(26);
	c(19) = 2*A_11(50) - 2*A_11(18);
	c(20) = 2*A_11(42) - 2*A_11(58);
	c(21) = A_11(67) - A_11(35) - A_11(3);
	c(22) = A_11(35) - A_11(3) - A_11(67);
	c(23) = A_11(3) - A_11(35) - A_11(67);
	c(24) = A_11(3) + A_11(35) + A_11(67);
	c(25) = 2*A_11(43) + 2*A_11(59);
	c(26) = 2*A_11(19) + 2*A_11(51);
	c(27) = 2*A_11(11) + 2*A_11(27);
	c(28) = 2*A_11(11) - 2*A_11(27);
	c(29) = 2*A_11(51) - 2*A_11(19);
	c(30) = 2*A_11(43) - 2*A_11(59);
	c(31) = A_11(68) - A_11(36) - A_11(4);
	c(32) = A_11(36) - A_11(4) - A_11(68);
	c(33) = A_11(4) - A_11(36) - A_11(68);
	c(34) = A_11(4) + A_11(36) + A_11(68);
	c(35) = 2*A_11(44) + 2*A_11(60);
	c(36) = 2*A_11(20) + 2*A_11(52);
	c(37) = 2*A_11(12) + 2*A_11(28);
	c(38) = 2*A_11(12) - 2*A_11(28);
	c(39) = 2*A_11(52) - 2*A_11(20);
	c(40) = 2*A_11(44) - 2*A_11(60);
	c(41) = A_11(76);
	c(42) = A_11(69) - A_11(37) - A_11(5);
	c(43) = A_11(37) - A_11(5) - A_11(69);
	c(44) = A_11(5) - A_11(37) - A_11(69);
	c(45) = A_11(5) + A_11(37) + A_11(69);
	c(46) = 2*A_11(45) + 2*A_11(61);
	c(47) = 2*A_11(21) + 2*A_11(53);
	c(48) = 2*A_11(13) + 2*A_11(29);
	c(49) = 2*A_11(13) - 2*A_11(29);
	c(50) = 2*A_11(53) - 2*A_11(21);
	c(51) = 2*A_11(45) - 2*A_11(61);
	c(52) = A_11(77);
	c(53) = A_11(70) - A_11(38) - A_11(6);
	c(54) = A_11(38) - A_11(6) - A_11(70);
	c(55) = A_11(6) - A_11(38) - A_11(70);
	c(56) = A_11(6) + A_11(38) + A_11(70);
	c(57) = 2*A_11(46) + 2*A_11(62);
	c(58) = 2*A_11(22) + 2*A_11(54);
	c(59) = 2*A_11(14) + 2*A_11(30);
	c(60) = 2*A_11(14) - 2*A_11(30);
	c(61) = 2*A_11(54) - 2*A_11(22);
	c(62) = 2*A_11(46) - 2*A_11(62);
	c(63) = A_11(78);
	c(64) = A_11(71) - A_11(39) - A_11(7);
	c(65) = A_11(39) - A_11(7) - A_11(71);
	c(66) = A_11(7) - A_11(39) - A_11(71);
	c(67) = A_11(7) + A_11(39) + A_11(71);
	c(68) = 2*A_11(47) + 2*A_11(63);
	c(69) = 2*A_11(23) + 2*A_11(55);
	c(70) = 2*A_11(15) + 2*A_11(31);
	c(71) = 2*A_11(15) - 2*A_11(31);
	c(72) = 2*A_11(55) - 2*A_11(23);
	c(73) = 2*A_11(47) - 2*A_11(63);
	c(74) = A_11(79);
	c(75) = A_11(72) - A_11(40) - A_11(8);
	c(76) = A_11(40) - A_11(8) - A_11(72);
	c(77) = A_11(8) - A_11(40) - A_11(72);
	c(78) = A_11(8) + A_11(40) + A_11(72);
	c(79) = 2*A_11(48) + 2*A_11(64);
	c(80) = 2*A_11(24) + 2*A_11(56);
	c(81) = 2*A_11(16) + 2*A_11(32);
	c(82) = 2*A_11(16) - 2*A_11(32);
	c(83) = 2*A_11(56) - 2*A_11(24);
	c(84) = 2*A_11(48) - 2*A_11(64);
	c(85) = A_11(80);
	c(86) = 1;
	c(87) = 1;
	c(88) = 1;
	c(89) = 1;
	c(90) = -1;

	M1 = zeros(4, 11);
	ci = [];
	M1(ci) = c(1);

	ci = [];
	M1(ci) = c(2);

	ci = [];
	M1(ci) = c(3);

	ci = [];
	M1(ci) = c(4);

	ci = [];
	M1(ci) = c(5);

	ci = [];
	M1(ci) = c(6);

	ci = [];
	M1(ci) = c(7);

	ci = [];
	M1(ci) = c(8);

	ci = [];
	M1(ci) = c(9);

	ci = [];
	M1(ci) = c(10);

	ci = [];
	M1(ci) = c(11);

	ci = [];
	M1(ci) = c(12);

	ci = [];
	M1(ci) = c(13);

	ci = [];
	M1(ci) = c(14);

	ci = [];
	M1(ci) = c(15);

	ci = [];
	M1(ci) = c(16);

	ci = [];
	M1(ci) = c(17);

	ci = [];
	M1(ci) = c(18);

	ci = [];
	M1(ci) = c(19);

	ci = [];
	M1(ci) = c(20);

	ci = [];
	M1(ci) = c(21);

	ci = [];
	M1(ci) = c(22);

	ci = [];
	M1(ci) = c(23);

	ci = [];
	M1(ci) = c(24);

	ci = [];
	M1(ci) = c(25);

	ci = [];
	M1(ci) = c(26);

	ci = [];
	M1(ci) = c(27);

	ci = [];
	M1(ci) = c(28);

	ci = [];
	M1(ci) = c(29);

	ci = [];
	M1(ci) = c(30);

	ci = [];
	M1(ci) = c(31);

	ci = [];
	M1(ci) = c(32);

	ci = [];
	M1(ci) = c(33);

	ci = [];
	M1(ci) = c(34);

	ci = [];
	M1(ci) = c(35);

	ci = [];
	M1(ci) = c(36);

	ci = [];
	M1(ci) = c(37);

	ci = [];
	M1(ci) = c(38);

	ci = [];
	M1(ci) = c(39);

	ci = [];
	M1(ci) = c(40);

	ci = [];
	M1(ci) = c(41);

	M1(37) = c(42);
	M1(21) = c(43);
	M1(9) = c(44);
	M1(1) = c(45);
	M1(33) = c(46);
	M1(29) = c(47);
	M1(17) = c(48);
	M1(25) = c(49);
	M1(13) = c(50);
	M1(5) = c(51);
	M1(41) = c(52);
	ci = [];
	M1(ci) = c(53);

	ci = [];
	M1(ci) = c(54);

	ci = [];
	M1(ci) = c(55);

	ci = [];
	M1(ci) = c(56);

	ci = [];
	M1(ci) = c(57);

	ci = [];
	M1(ci) = c(58);

	ci = [];
	M1(ci) = c(59);

	ci = [];
	M1(ci) = c(60);

	ci = [];
	M1(ci) = c(61);

	ci = [];
	M1(ci) = c(62);

	ci = [];
	M1(ci) = c(63);

	M1(38) = c(64);
	M1(22) = c(65);
	M1(10) = c(66);
	M1(2) = c(67);
	M1(34) = c(68);
	M1(30) = c(69);
	M1(18) = c(70);
	M1(26) = c(71);
	M1(14) = c(72);
	M1(6) = c(73);
	M1(42) = c(74);
	M1(39) = c(75);
	M1(23) = c(76);
	M1(11) = c(77);
	M1(3) = c(78);
	M1(35) = c(79);
	M1(31) = c(80);
	M1(19) = c(81);
	M1(27) = c(82);
	M1(15) = c(83);
	M1(7) = c(84);
	M1(43) = c(85);
	M1(40) = c(86);
	M1(24) = c(87);
	M1(12) = c(88);
	M1(4) = c(89);
	M1(44) = c(90);

	M1 = qrdec(M1);

	M2 = zeros(20, 35);
	M2(17:20, [21 22 23 24 25 26 27 28 29 30 35]) = M1(1:4, :);
	M2([1 22 83 204]) = M1(1);
	M2([25 46 107 228]) = M1(6);
	M2([49 70 131 252]) = M1(11);
	M2([93 114 155 276]) = M1(16);
	M2([101 122 163 284]) = M1(17);
	M2([105 126 167 288]) = M1(18);
	M2([109 130 171 292]) = M1(19);
	M2([113 134 175 296]) = M1(20);
	M2([141 162 183 304]) = M1(21);
	M2([145 166 187 308]) = M1(22);
	M2([149 170 191 312]) = M1(23);
	M2([153 174 195 316]) = M1(24);
	M2([201 222 263 324]) = M1(25);
	M2([205 226 267 328]) = M1(26);
	M2([209 230 271 332]) = M1(27);
	M2([213 234 275 336]) = M1(28);
	M2([221 242 283 344]) = M1(29);
	M2([225 246 287 348]) = M1(30);
	M2([229 250 291 352]) = M1(31);
	M2([233 254 295 356]) = M1(32);
	M2([261 282 303 364]) = M1(33);
	M2([265 286 307 368]) = M1(34);
	M2([269 290 311 372]) = M1(35);
	M2([273 294 315 376]) = M1(36);
	M2([321 342 363 384]) = M1(37);
	M2([325 346 367 388]) = M1(38);
	M2([329 350 371 392]) = M1(39);
	M2([333 354 375 396]) = M1(40);
	M2([601 622 643 664]) = M1(41);
	M2([605 626 647 668]) = M1(42);
	M2([609 630 651 672]) = M1(43);
	M2([613 634 655 676]) = M1(44);
	M2 = qrdec(M2);

	M3 = zeros(54, 70);
	M3(35:54, [36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70]) = M2(1:20, :);
	M3([1 326 489 814 869 1032 1357]) = M2(417);
	M3([62 117 388 551 876 931 1094 1419]) = M2(438);
	M3([124 179 234 451 614 939 994 1157 1482]) = M2(459);
	M3([295 350 405 514 569 678 1057 1112 1221 1546]) = M2(480);
	M3([325 596 705 1084 1139 1248 1573]) = M2(497);
	M3([332 387 604 713 1092 1147 1256 1581]) = M2(498);
	M3([340 395 450 613 722 1101 1156 1265 1590]) = M2(499);
	M3([349 404 459 568 623 732 1111 1166 1275 1600]) = M2(500);
	M3([487 704 759 1192 1247 1302 1627]) = M2(517);
	M3([494 549 712 767 1200 1255 1310 1635]) = M2(518);
	M3([502 557 612 721 776 1209 1264 1319 1644]) = M2(519);
	M3([511 566 621 676 731 786 1219 1274 1329 1654]) = M2(520);
	M3([811 1082 1191 1354 1409 1518 1681]) = M2(537);
	M3([818 873 1090 1199 1362 1417 1526 1689]) = M2(538);
	M3([826 881 936 1099 1208 1371 1426 1535 1698]) = M2(539);
	M3([835 890 945 1054 1109 1218 1381 1436 1545 1708]) = M2(540);
	M3([865 1136 1245 1408 1463 1572 1735]) = M2(557);
	M3([872 927 1144 1253 1416 1471 1580 1743]) = M2(558);
	M3([880 935 990 1153 1262 1425 1480 1589 1752]) = M2(559);
	M3([889 944 999 1108 1163 1272 1435 1490 1599 1762]) = M2(560);
	M3([1027 1244 1299 1516 1571 1626 1789]) = M2(577);
	M3([1034 1089 1252 1307 1524 1579 1634 1797]) = M2(578);
	M3([1042 1097 1152 1261 1316 1533 1588 1643 1806]) = M2(579);
	M3([1051 1106 1161 1216 1271 1326 1543 1598 1653 1816]) = M2(580);
	M3([1351 1568 1623 1678 1733 1788 1843]) = M2(597);
	M3([1358 1413 1576 1631 1686 1741 1796 1851]) = M2(598);
	M3([1366 1421 1476 1585 1640 1695 1750 1805 1860]) = M2(599);
	M3([1375 1430 1485 1540 1595 1650 1705 1760 1815 1870]) = M2(600);
	M3([2971 3188 3243 3298 3353 3408 3463]) = M2(697);
	M3([2978 3033 3196 3251 3306 3361 3416 3471]) = M2(698);
	M3([2986 3041 3096 3205 3260 3315 3370 3425 3480]) = M2(699);
	M3([2995 3050 3105 3160 3215 3270 3325 3380 3435 3490]) = M2(700);
	M3 = qrdec(M3);

	M4 = zeros(58, 70);
	M4(5:58, [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70]) = M3(1:54, :);
	M4([1451 1510 1627 1802]) = M3(3348);
	M4([1509 1568 1685 1860]) = M3(3402);
	M4([1625 1684 1743 1918]) = M3(3456);
	M4([1799 1858 1917 1976]) = M3(3510);
	M4([3539 3598 3657 3716]) = M3(3780);
	M4 = qrdec(M4);

	M = zeros(34, 42);
	M(23:34, [19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42]) = M4([43 44 45 46 47 48 49 50 51 53 54 56], [43 44 45 46 47 48 49 50 51 52 53 54 55 57 58 60 63 64 65 66 67 68 69 70]);
	M([1 36 71 106 141 176 347 382 417 554]) = M4(3537);
	M([11 46 115 218 253 288 323 358 461 496 531 600]) = M4(3596);
	M([205 240 310 380 483]) = M4(3653);
	M([45 80 149 252 322 392 495]) = M4(3654);
	M([273 308 344 379 414 517 553]) = M4(3711);
	M([113 148 183 320 356 391 426 529 565]) = M4(3712);
	M([443 478 514 550 585]) = M4(3769);
	M([351 386 421 490 526 562 597]) = M4(3770);
	M([715 750 785 820 855 890 925 960 995 1030]) = M4(4059);
	M([623 658 693 762 797 832 867 902 937 972 1007 1042]) = M4(4060);
	M = qrdec(M);

	A = zeros(8);
	amcols = [42 41 40 39 38 37 36 35];
	A(1, 4) = 1;
	A(2, 8) = 1;
	A(3, :) = -M(34, amcols);
	A(4, :) = -M(33, amcols);
	A(5, :) = -M(32, amcols);
	A(6, :) = -M(29, amcols);
	A(7, :) = -M(26, amcols);
	A(8, :) = -M(24, amcols);

	[V D] = eig(A);
	sol =  V([5, 4, 3, 2],:)./(ones(4, 1)*V(1,:));

	if (find(isnan(sol(:))) > 0)
		
		a = zeros(1, 0);
		b = zeros(1, 0);
		c = zeros(1, 0);
		d = zeros(1, 0);
	else
		
		I = find(not(imag( sol(1,:) )));
		a = sol(1,I);
		b = sol(2,I);
		c = sol(3,I);
		d = sol(4,I);
	end
end
