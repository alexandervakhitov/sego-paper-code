% Generated using GBSolver generator Copyright Martin Bujnak,
% Zuzana Kukelova, Tomas Pajdla CTU Prague 2008.
% 
% Please refer to the following paper, when using this code :
%     Kukelova Z., Bujnak M., Pajdla T., Automatic Generator of Minimal Problem Solvers,
%     ECCV 2008, Marseille, France, October 12-18, 2008

function [b, c, d, a, e] = solver_p3v3_dif_notensor3_1p1l_1l(A_11, B_11)

	% precalculate polynomial equations coefficients
	c(1) = A_11(17) - A_11(9) - A_11(1);
	c(2) = A_11(9) - A_11(1) - A_11(17);
	c(3) = A_11(1) - A_11(9) - A_11(17);
	c(4) = A_11(1) + A_11(9) + A_11(17);
	c(5) = 2*A_11(11) + 2*A_11(15);
	c(6) = 2*A_11(5) + 2*A_11(13);
	c(7) = 2*A_11(3) + 2*A_11(7);
	c(8) = 2*A_11(3) - 2*A_11(7);
	c(9) = 2*A_11(13) - 2*A_11(5);
	c(10) = 2*A_11(11) - 2*A_11(15);
	c(11) = A_11(19);
	c(12) = A_11(21);
	c(13) = A_11(18) - A_11(10) - A_11(2);
	c(14) = A_11(10) - A_11(2) - A_11(18);
	c(15) = A_11(2) - A_11(10) - A_11(18);
	c(16) = A_11(2) + A_11(10) + A_11(18);
	c(17) = 2*A_11(12) + 2*A_11(16);
	c(18) = 2*A_11(6) + 2*A_11(14);
	c(19) = 2*A_11(4) + 2*A_11(8);
	c(20) = 2*A_11(4) - 2*A_11(8);
	c(21) = 2*A_11(14) - 2*A_11(6);
	c(22) = 2*A_11(12) - 2*A_11(16);
	c(23) = A_11(20);
	c(24) = A_11(22);
	c(25) = 2*B_11(29) + 2*B_11(33);
	c(26) = 2*B_11(23) + 2*B_11(31);
	c(27) = 2*B_11(21) + 2*B_11(25);
	c(28) = 2*B_11(21) - 2*B_11(25);
	c(29) = 2*B_11(31) - 2*B_11(23);
	c(30) = 2*B_11(29) - 2*B_11(33);
	c(31) = B_11(17) - B_11(9) - B_11(1);
	c(32) = B_11(9) - B_11(1) - B_11(17);
	c(33) = B_11(1) - B_11(9) - B_11(17);
	c(34) = B_11(1) + B_11(9) + B_11(17);
	c(35) = B_11(35) - B_11(27) - B_11(19);
	c(36) = B_11(27) - B_11(19) - B_11(35);
	c(37) = B_11(19) - B_11(27) - B_11(35);
	c(38) = B_11(19) + B_11(27) + B_11(35);
	c(39) = 2*B_11(11) + 2*B_11(15);
	c(40) = 2*B_11(5) + 2*B_11(13);
	c(41) = 2*B_11(3) + 2*B_11(7);
	c(42) = 2*B_11(3) - 2*B_11(7);
	c(43) = 2*B_11(13) - 2*B_11(5);
	c(44) = 2*B_11(11) - 2*B_11(15);
	c(45) = B_11(37);
	c(46) = 2*B_11(30) + 2*B_11(34);
	c(47) = 2*B_11(24) + 2*B_11(32);
	c(48) = 2*B_11(22) + 2*B_11(26);
	c(49) = 2*B_11(22) - 2*B_11(26);
	c(50) = 2*B_11(32) - 2*B_11(24);
	c(51) = 2*B_11(30) - 2*B_11(34);
	c(52) = B_11(18) - B_11(10) - B_11(2);
	c(53) = B_11(10) - B_11(2) - B_11(18);
	c(54) = B_11(2) - B_11(10) - B_11(18);
	c(55) = B_11(2) + B_11(10) + B_11(18);
	c(56) = B_11(36) - B_11(28) - B_11(20);
	c(57) = B_11(28) - B_11(20) - B_11(36);
	c(58) = B_11(20) - B_11(28) - B_11(36);
	c(59) = B_11(20) + B_11(28) + B_11(36);
	c(60) = 2*B_11(12) + 2*B_11(16);
	c(61) = 2*B_11(6) + 2*B_11(14);
	c(62) = 2*B_11(4) + 2*B_11(8);
	c(63) = 2*B_11(4) - 2*B_11(8);
	c(64) = 2*B_11(14) - 2*B_11(6);
	c(65) = 2*B_11(12) - 2*B_11(16);
	c(66) = B_11(38);
	c(67) = 1;
	c(68) = 1;
	c(69) = 1;
	c(70) = 1;
	c(71) = -1;

	M1 = zeros(20, 51);
	ci = [141, 162, 183, 304, 505, 716];
	M1(ci) = c(1);

	ci = [41, 62, 123, 244, 445, 656];
	M1(ci) = c(2);

	ci = [1, 22, 83, 204, 405, 616];
	M1(ci) = c(3);

	ci = [321, 342, 363, 384, 585, 796];
	M1(ci) = c(4);

	ci = [101, 122, 163, 284, 485, 696];
	M1(ci) = c(5);

	ci = [81, 102, 143, 264, 465, 676];
	M1(ci) = c(6);

	ci = [21, 42, 103, 224, 425, 636];
	M1(ci) = c(7);

	ci = [261, 282, 303, 364, 565, 776];
	M1(ci) = c(8);

	ci = [221, 242, 283, 344, 545, 756];
	M1(ci) = c(9);

	ci = [201, 222, 263, 324, 525, 736];
	M1(ci) = c(10);

	ci = [801, 822, 843, 864, 885, 996];
	M1(ci) = c(11);

	ci = [901, 922, 943, 964, 985, 1016];
	M1(ci) = c(12);

	ci = [146, 167, 188, 309, 510, 717];
	M1(ci) = c(13);

	ci = [46, 67, 128, 249, 450, 657];
	M1(ci) = c(14);

	ci = [6, 27, 88, 209, 410, 617];
	M1(ci) = c(15);

	ci = [326, 347, 368, 389, 590, 797];
	M1(ci) = c(16);

	ci = [106, 127, 168, 289, 490, 697];
	M1(ci) = c(17);

	ci = [86, 107, 148, 269, 470, 677];
	M1(ci) = c(18);

	ci = [26, 47, 108, 229, 430, 637];
	M1(ci) = c(19);

	ci = [266, 287, 308, 369, 570, 777];
	M1(ci) = c(20);

	ci = [226, 247, 288, 349, 550, 757];
	M1(ci) = c(21);

	ci = [206, 227, 268, 329, 530, 737];
	M1(ci) = c(22);

	ci = [806, 827, 848, 869, 890, 997];
	M1(ci) = c(23);

	ci = [906, 927, 948, 969, 990, 1017];
	M1(ci) = c(24);

	M1(498) = c(25);
	M1(478) = c(26);
	M1(438) = c(27);
	M1(578) = c(28);
	M1(558) = c(29);
	M1(538) = c(30);
	M1(718) = c(31);
	M1(658) = c(32);
	M1(618) = c(33);
	M1(798) = c(34);
	M1(518) = c(35);
	M1(458) = c(36);
	M1(418) = c(37);
	M1(598) = c(38);
	M1(698) = c(39);
	M1(678) = c(40);
	M1(638) = c(41);
	M1(778) = c(42);
	M1(758) = c(43);
	M1(738) = c(44);
	M1(1018) = c(45);
	M1(499) = c(46);
	M1(479) = c(47);
	M1(439) = c(48);
	M1(579) = c(49);
	M1(559) = c(50);
	M1(539) = c(51);
	M1(719) = c(52);
	M1(659) = c(53);
	M1(619) = c(54);
	M1(799) = c(55);
	M1(519) = c(56);
	M1(459) = c(57);
	M1(419) = c(58);
	M1(599) = c(59);
	M1(699) = c(60);
	M1(679) = c(61);
	M1(639) = c(62);
	M1(779) = c(63);
	M1(759) = c(64);
	M1(739) = c(65);
	M1(1019) = c(66);
	ci = [151, 172, 193, 314, 515, 720];
	M1(ci) = c(67);

	ci = [51, 72, 133, 254, 455, 660];
	M1(ci) = c(68);

	ci = [11, 32, 93, 214, 415, 620];
	M1(ci) = c(69);

	ci = [331, 352, 373, 394, 595, 800];
	M1(ci) = c(70);

	ci = [911, 932, 953, 974, 995, 1020];
	M1(ci) = c(71);


	M1 = qrdec(M1);

	M2 = zeros(25, 51);
	M2(6:25, [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51]) = M1(1:20, :);
	M2([101 127 178 329 580]) = M1(680);
	M2([126 152 203 354 605]) = M1(700);
	M2([176 202 228 379 630]) = M1(720);
	M2([251 277 328 404 655]) = M1(740);
	M2([276 302 353 429 680]) = M1(760);
	M2([326 352 378 454 705]) = M1(780);
	M2([401 427 453 479 730]) = M1(800);
	M2([1001 1027 1053 1079 1105]) = M1(1000);
	M2([1126 1152 1178 1204 1230]) = M1(1020);
	M2 = qrdec(M2);

	M3 = zeros(84, 121);
	M3(60:84, [66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121]) = M2(1:25, :);
	M3([3361 3446 3615 4120 4961]) = M2(621);
	M3([3529 3614 3699 4204 5045]) = M2(646);
	M3([3781 3866 4035 4288 5129]) = M2(671);
	M3([3865 3950 4119 4372 5213]) = M2(696);
	M3([4033 4118 4203 4456 5297]) = M2(721);
	M3([4285 4370 4455 4540 5381]) = M2(746);
	M3([6 511 764 1269 1354 1607 2112 2953 3038 3291 3796 4637]) = M2(772);
	M3([102 187 608 861 1366 1451 1704 2209 3050 3135 3388 3893 4734]) = M2(798);
	M3([199 284 369 706 959 1464 1549 1802 2307 3148 3233 3486 3991 4832]) = M2(824);
	M3([465 550 635 804 889 1058 1647 1732 1901 2406 3331 3416 3585 4090 4931]) = M2(850);
	M3([5881 5966 6135 6640 7481]) = M2(871);
	M3([510 931 1100 1689 1774 1943 2448 3373 3458 3627 4132 4973]) = M2(872);
	M3([522 607 944 1113 1702 1787 1956 2461 3386 3471 3640 4145 4986]) = M2(873);
	M3([535 620 705 958 1127 1716 1801 1970 2475 3400 3485 3654 4159 5000]) = M2(874);
	M3([549 634 719 888 973 1142 1731 1816 1985 2490 3415 3500 3669 4174 5015]) = M2(875);
	M3([6049 6134 6219 6724 7565]) = M2(896);
	M3([762 1099 1184 1857 1942 2027 2532 3541 3626 3711 4216 5057]) = M2(897);
	M3([774 859 1112 1197 1870 1955 2040 2545 3554 3639 3724 4229 5070]) = M2(898);
	M3([787 872 957 1126 1211 1884 1969 2054 2559 3568 3653 3738 4243 5084]) = M2(899);
	M3([801 886 971 1056 1141 1226 1899 1984 2069 2574 3583 3668 3753 4258 5099]) = M2(900);
	M3([6301 6386 6555 6808 7649]) = M2(921);
	M3([1266 1687 1856 2109 2194 2363 2616 3793 3878 4047 4300 5141]) = M2(922);
	M3([1278 1363 1700 1869 2122 2207 2376 2629 3806 3891 4060 4313 5154]) = M2(923);
	M3([1291 1376 1461 1714 1883 2136 2221 2390 2643 3820 3905 4074 4327 5168]) = M2(924);
	M3([1305 1390 1475 1644 1729 1898 2151 2236 2405 2658 3835 3920 4089 4342 5183]) = M2(925);
	M3([6385 6470 6639 6892 7733]) = M2(946);
	M3([1350 1771 1940 2193 2278 2447 2700 3877 3962 4131 4384 5225]) = M2(947);
	M3([1362 1447 1784 1953 2206 2291 2460 2713 3890 3975 4144 4397 5238]) = M2(948);
	M3([1375 1460 1545 1798 1967 2220 2305 2474 2727 3904 3989 4158 4411 5252]) = M2(949);
	M3([1389 1474 1559 1728 1813 1982 2235 2320 2489 2742 3919 4004 4173 4426 5267]) = M2(950);
	M3([6553 6638 6723 6976 7817]) = M2(971);
	M3([1602 1939 2024 2361 2446 2531 2784 4045 4130 4215 4468 5309]) = M2(972);
	M3([1614 1699 1952 2037 2374 2459 2544 2797 4058 4143 4228 4481 5322]) = M2(973);
	M3([1627 1712 1797 1966 2051 2388 2473 2558 2811 4072 4157 4242 4495 5336]) = M2(974);
	M3([1641 1726 1811 1896 1981 2066 2403 2488 2573 2826 4087 4172 4257 4510 5351]) = M2(975);
	M3([6805 6890 6975 7060 7901]) = M2(996);
	M3([2106 2443 2528 2613 2698 2783 2868 4297 4382 4467 4552 5393]) = M2(997);
	M3([2118 2203 2456 2541 2626 2711 2796 2881 4310 4395 4480 4565 5406]) = M2(998);
	M3([2131 2216 2301 2470 2555 2640 2725 2810 2895 4324 4409 4494 4579 5420]) = M2(999);
	M3([2145 2230 2315 2400 2485 2570 2655 2740 2825 2910 4339 4424 4509 4594 5435]) = M2(1000);
	M3([7981 8066 8151 8236 8321]) = M2(1121);
	M3([9241 9326 9411 9496 9581]) = M2(1246);
	M3([7146 7483 7568 7653 7738 7823 7908 7993 8078 8163 8248 8333]) = M2(1247);
	M3([7158 7243 7496 7581 7666 7751 7836 7921 8006 8091 8176 8261 8346]) = M2(1248);
	M3([7171 7256 7341 7510 7595 7680 7765 7850 7935 8020 8105 8190 8275 8360]) = M2(1249);
	M3([7185 7270 7355 7440 7525 7610 7695 7780 7865 7950 8035 8120 8205 8290 8375]) = M2(1250);
	M3([9661 9746 9831 9916 10001]) = M2(1271);
	M3([8406 8743 8828 8913 8998 9083 9168 9253 9338 9423 9508 9593]) = M2(1272);
	M3([8418 8503 8756 8841 8926 9011 9096 9181 9266 9351 9436 9521 9606]) = M2(1273);
	M3([8431 8516 8601 8770 8855 8940 9025 9110 9195 9280 9365 9450 9535 9620]) = M2(1274);
	M3([8445 8530 8615 8700 8785 8870 8955 9040 9125 9210 9295 9380 9465 9550 9635]) = M2(1275);
	M3 = qrdec(M3);

	M4 = zeros(101, 125);
	M4(18:101, [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125]) = M3(1:84, :);
	M4([4647 4749 4952 5256]) = M3(7804);
	M4([4849 4951 5053 5357]) = M3(7888);
	M4([5152 5254 5356 5458]) = M3(7972);
	M4([6570]) = M3(8057);
	M4([6268 6673]) = M3(8142);
	M4([5866 5968 6070 6374 6779]) = M3(8227);
	M4([6174 6276 6378 6480 6885]) = M3(8312);
	M4([7475 7577 7780 8387]) = M3(8812);
	M4([7677 7779 7881 8488]) = M3(8896);
	M4([7980 8082 8285 8589]) = M3(8980);
	M4([8081 8183 8386 8690]) = M3(9064);
	M4([8283 8385 8487 8791]) = M3(9148);
	M4([8586 8688 8790 8892]) = M3(9232);
	M4([10004]) = M3(9317);
	M4([9601 10006]) = M3(9318);
	M4([8997 9099 9302 9606 10011]) = M3(9319);
	M4([9002 9104 9307 9611 10016]) = M3(9320);
	M4([10105]) = M3(9401);
	M4([9702 10107]) = M3(9402);
	M4([9098 9200 9403 9707 10112]) = M3(9403);
	M4([9103 9205 9408 9712 10117]) = M3(9404);
	M4([10206]) = M3(9485);
	M4([9803 10208]) = M3(9486);
	M4([9300 9402 9504 9808 10213]) = M3(9487);
	M4([9305 9407 9509 9813 10218]) = M3(9488);
	M4([10307]) = M3(9569);
	M4([9904 10309]) = M3(9570);
	M4([9603 9705 9807 9909 10314]) = M3(9571);
	M4([9608 9710 9812 9914 10319]) = M3(9572);
	M4([10000 10102 10204 10306]) = M3(9652);
	M4([11519]) = M3(9737);
	M4([11116 11521]) = M3(9738);
	M4([10512 10614 10817 11121 11526]) = M3(9739);
	M4([10517 10619 10822 11126 11531]) = M3(9740);
	M4([11620]) = M3(9821);
	M4([11217 11622]) = M3(9822);
	M4([10613 10715 10918 11222 11627]) = M3(9823);
	M4([10618 10720 10923 11227 11632]) = M3(9824);
	M4([11721]) = M3(9905);
	M4([11318 11723]) = M3(9906);
	M4([10815 10917 11019 11323 11728]) = M3(9907);
	M4([10820 10922 11024 11328 11733]) = M3(9908);
	M4([11822]) = M3(9989);
	M4([11419 11824]) = M3(9990);
	M4([11118 11220 11322 11424 11829]) = M3(9991);
	M4([11123 11225 11327 11429 11834]) = M3(9992);
	M4([11515 11617 11719 11821]) = M3(10072);
	M4([12020 12122 12224 12326]) = M3(10156);
	M4 = qrdec(M4);

	M = zeros(32, 48);
	M(5:32, [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48]) = M4([37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 62 63 64 65 81 88 89 90 91 92 93 94 95], [41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 66 67 68 69 85 86 87 88 89 96 97 98 99 100 101 102 103 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125]);
	M([1 34 99 292]) = M4(11009);
	M([65 98 131 324]) = M4(11110);
	M([161 194 259 356]) = M4(11211);
	M([193 226 291 388]) = M4(11312);
	M([257 290 323 420]) = M4(11413);
	M([353 386 419 452]) = M4(11514);
	M([481 514 547 580]) = M4(12019);
	M([897 930 963 996]) = M4(12524);
	M([1185 1218 1251 1284]) = M4(12625);
	M = qrdec(M);

	A = zeros(16);
	amcols = [48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33];
	A(1, 3) = 1;
	A(2, 8) = 1;
	A(3, 12) = 1;
	A(4, 13) = 1;
	A(5, 14) = 1;
	A(6, 15) = 1;
	A(7, :) = -M(32, amcols);
	A(8, :) = -M(28, amcols);
	A(9, :) = -M(27, amcols);
	A(10, :) = -M(26, amcols);
	A(11, :) = -M(25, amcols);
	A(12, :) = -M(24, amcols);
	A(13, :) = -M(23, amcols);
	A(14, :) = -M(22, amcols);
	A(15, :) = -M(21, amcols);
	A(16, :) = -M(20, amcols);

	[V D] = eig(A);
	sol =  V([6, 5, 4, 3, 2],:)./(ones(5, 1)*V(1,:));

	if (find(isnan(sol(:))) > 0)
		
		b = zeros(1, 0);
		c = zeros(1, 0);
		d = zeros(1, 0);
		a = zeros(1, 0);
		e = zeros(1, 0);
	else
		
		I = find(not(imag( sol(1,:) )));
		b = sol(1,I);
		c = sol(2,I);
		d = sol(3,I);
		a = sol(4,I);
		e = sol(5,I);
	end
end
